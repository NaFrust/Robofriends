{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","React","Component","App","useState","setRobots","searchfield","setSearchfield","count","useEffect","fetch","then","response","json","users","console","log","filteredRobots","filter","robot","toLowerCase","includes","length","event","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAgBeA,EAdF,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,GACxB,OACG,mCACC,sBAAKC,UAAU,kDAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAA1B,aAAyCG,IAAI,kBACrD,gCACI,6BAAKL,IACL,4BAAIC,aCaLK,EAnBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAEf,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GAClB,OACI,cAAC,EAAD,CACAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHNM,EAAOG,GAAGR,UCK1BS,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKT,UAAW,MAAhB,SACA,uBACAA,UAAU,mCACVU,KAAK,SACLC,YAAY,eACZC,SAAUH,OCCHI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAU,SAAUC,OAAO,kBAAmBC,OAAO,SAAlE,SACKJ,EAAMK,Y,4BCiBJC,E,kDAnBX,WAAYN,GAAO,IAAD,8BACd,gBACKO,MAAQ,CACTC,UAAU,GAHA,E,qDAOlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAE7B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,qDAEAG,KAAKX,MAAMK,a,GAfHQ,IAAMC,W,MCyClBC,MAnCf,WACI,MAA4BC,mBAAS,IAArC,mBAAO1B,EAAP,KAAe2B,EAAf,KACA,EAAsCD,mBAAS,IAA/C,mBAAOE,EAAP,KAAoBC,EAApB,KACA,EAA0BH,mBAAS,GAAnC,mBAAOI,EAAP,UAMAC,qBAAU,WACNC,MAAM,+CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAIT,EAAUS,MACzBC,QAAQC,IAAIR,KACV,CAACA,IAEP,IAAMS,EAAiBvC,EAAOwC,QAAO,SAACC,GAClC,OAAQA,EAAMhD,KAAKiD,cAAcC,SAASf,EAAYc,kBAG1D,OAAQ1C,EAAO4C,OAEP,sBAAKhD,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBAEA,cAAC,EAAD,CAAWS,aApBA,SAACwC,GACpBhB,EAAegB,EAAMC,OAAOC,UAoBpB,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU/C,OAAQuC,WARd,oBAAI3C,UAAU,KAAd,uBChBboD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,EAAD,MAEAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6306bdc2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id}) =>{\r\n    return(\r\n       <>\r\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow shadow-5\">\r\n            <img src={`https://robohash.org/${id}\"?150x150`} alt=\"Cara de robot\"/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n \r\n    return (\r\n        <div> \r\n            {\r\n                robots.map((user, i) => {\r\n                return( \r\n                    <Card key={robots[i].id} \r\n                    id={robots[i].id} \r\n                    name={robots[i].name} \r\n                    email={robots[i].email}\r\n                    />\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n    return (\r\n        <div className= \"pa2\">\r\n        <input \r\n        className=\"pa3 ba b--green bg-lightest-blue\"\r\n        type='search' \r\n        placeholder=\"Busca Robots\"\r\n        onChange={searchChange}\r\n        />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;  ","import React from 'react';\r\n\r\nconst Scroll = (props) =>{\r\n    return (\r\n        <div style={{overflowY:'scroll', border:'1px solid black', height:'450px'}}>\r\n            {props.children }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\nclass ErrorBoundry extends React.Component{\r\n    constructor(props){\r\n        super();\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError: true})\r\n    }\r\n    render(){\r\n        if (this.state.hasError) {\r\n            return <h1>ups! i did it again</h1>\r\n        }else{\r\n            return this.props.children;\r\n        }\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React,{ useState, useEffect} from 'react';\r\nimport Cardlist from '../components/CardList.js';\r\nimport SearchBox from '../components/SearchBox.js';\r\nimport Scroll from '../components/Scroll.js';\r\nimport ErrorBoundry from '../components/ErrorBoundry.js'\r\nimport './App.css';\r\n\r\n\r\nfunction App () {\r\n    const [robots, setRobots] = useState([]);\r\n    const [searchfield, setSearchfield] = useState('');\r\n    const [count, setCount] = useState(0);\r\n\r\n    const onSearchChange = (event) => {\r\n        setSearchfield(event.target.value);}\r\n        \r\n\r\n    useEffect(()=>{\r\n        fetch('https://jsonplaceholder.typicode.com/users/')\r\n        .then(response => response.json())\r\n        .then(users => setRobots(users)) \r\n        console.log(count)\r\n        },[count]); //va a funcionar cada vez que count cambie\r\n         \r\n    const filteredRobots = robots.filter((robot) => {\r\n        return (robot.name.toLowerCase().includes(searchfield.toLowerCase()))\r\n        });\r\n\r\n    return !robots.length ? <h1 className=\"tc\">Cargando</h1> : \r\n        (\r\n            <div className=\"tc\">\r\n                <h1 className=\"f1\">RoboFriends</h1>\r\n               \r\n                <SearchBox searchChange={onSearchChange}/>\r\n                <Scroll>\r\n                    <ErrorBoundry>\r\n                        <Cardlist robots={filteredRobots}/>\r\n                    </ErrorBoundry>\r\n                </Scroll>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App.js';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n  <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n/**/"],"sourceRoot":""}